#!/bin/bash

CERT_INCLUDE_DIR=${1}
. ${CERT_INCLUDE_DIR}/config.inc

net_test_run=${CERT_TEST_STATUS_HOME}/${2}_test.run
echo 0 > ${net_test_run}

net_set_speed() {
	local netspeed=${1:-1000}
	ethtool -s eth0 speed ${netspeed}
	ifconfig eth0 up
}

SERVER_IP=10.50.0.0
CLIENT_IP=10.50.0.1

net_server() {
	ifconfig eth0 ${SERVER_IP}/24
    echo 1 > ${net_test_run}
	iperf3 -B ${SERVER_IP} -s > /dev/null
}

net_client() {
	ifconfig eth0 ${CLIENT_IP}/24
	while [ 1 ]
	do
        iperf3 -B ${CLIENT_IP} -c ${SERVER_IP} -b ${net_bandwidth} -t 60 -i 3 > /dev/null
		sleep 1
	done
}

net_status() {
	local prev_tx_pkts=$(cat /sys/class/net/eth0/statistics/tx_packets)
	local curr_tx_pkts=${prev_tx_pkts}
	while [ 1 ]
	do
		sleep 3
		operstate=$(cat /sys/class/net/eth0/operstate)
		if [[ "${operstate}" == "down" ]]; then
			echo 0 > ${net_test_run}
			continue
		fi
		curr_tx_pkts=$(cat /sys/class/net/eth0/statistics/tx_packets)
		if [ ! -z ${curr_tx_pkts} ] && [ ${curr_tx_pkts} -gt ${prev_tx_pkts} ]; then
			echo 1 > ${net_test_run}
			prev_tx_pkts=${curr_tx_pkts}
		else
			echo 0 > ${net_test_run}
			continue
		fi
	done
}

#set -x
echo 0 > ${net_test_run}
net_set_speed ${link_speed}
sleep 1
if [[ "${wb_test_role}" == "AP" ]] ; then
    net_server
else
    net_client &
    sleep 1
    net_status
fi
